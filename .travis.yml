language: cpp
sudo: required

cache:
  directories:
  - ${TRAVIS_BUILD_DIR}/deps/cmake
  - ${TRAVIS_BUILD_DIR}/deps/llvm/install
  - ${TRAVIS_BUILD_DIR}/deps/glfw3
  - ${TRAVIS_BUILD_DIR}/deps/opencv
  - ${TRAVIS_BUILD_DIR}/deps/Bullet
matrix:
  include:
  - env: GCC_VERSION=5 BUILD_TYPE=Release
    os: linux
    addons:
      apt:
        packages: *packages
        sources: *sources
#  - os: osx
#    osx_image: xcode9
#    compiler: clang


install:
- if [[ -n "$CLANG_VERSION" ]]; then export CXX=clang++-$CLANG_VERSION CC=clang-$CLANG_VERSION; fi
- if [[ -n "$GCC_VERSION" ]]; then export CXX=g++-$GCC_VERSION CC=gcc-$GCC_VERSION; fi
- JOBS=2
- DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
- mkdir -p "${DEPS_DIR}" && cd "${DEPS_DIR}"

############################################################################
# Install a recent CMake (unless already installed on OS X)
############################################################################
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    if [[ -z "$(ls -A ${DEPS_DIR}/cmake/bin)" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz"
      mkdir -p cmake && travis_retry wget --no-check-certificate --quiet -O - "${CMAKE_URL}" | tar --strip-components=1 -xz -C cmake
    fi
    export PATH="${DEPS_DIR}/cmake/bin:${PATH}"
  else
    if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
  fi
############################################################################
# [linux]: Install the right version of libc++
############################################################################
- |
  if [[ -n "$CLANG_VERSION" && "${TRAVIS_OS_NAME}" == "linux" && "${STDLIB}" != "libstdc++" ]]; then
    LLVM_VERSION="3.8.1"
    LLVM_ROOT="${DEPS_DIR}/llvm"
    LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
    LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
    LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
    if [[ -z "$(ls -A ${LLVM_ROOT}/install/include)" ]]; then
      mkdir -p "${LLVM_ROOT}" "${LLVM_ROOT}/build" "${LLVM_ROOT}/projects/libcxx" "${LLVM_ROOT}/projects/libcxxabi"
      travis_retry wget --quiet -O - "${LLVM_URL}" | tar --strip-components=1 -xJ -C "${LLVM_ROOT}"
      travis_retry wget --quiet -O - "${LIBCXX_URL}" | tar --strip-components=1 -xJ -C "${LLVM_ROOT}/projects/libcxx"
      travis_retry wget --quiet -O - "${LIBCXXABI_URL}" | tar --strip-components=1 -xJ -C "${LLVM_ROOT}/projects/libcxxabi"
      (cd "${LLVM_ROOT}/build" && cmake .. -DCMAKE_CXX_COMPILER="$CXX" -DCMAKE_C_COMPILER="$CC" -DCMAKE_INSTALL_PREFIX="${LLVM_ROOT}/install" -DCMAKE_BUILD_TYPE=$BUILD_TYPE)
      (cd "${LLVM_ROOT}/build/projects/libcxx" && make install -j$JOBS)
      (cd "${LLVM_ROOT}/build/projects/libcxxabi" && make install -j$JOBS)
    fi
    export CXXFLAGS="-I ${LLVM_ROOT}/install/include/c++/v1"
    export LDFLAGS="-L ${LLVM_ROOT}/install/lib -lc++ -lc++abi"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_ROOT}/install/lib"
  fi
############################################################################
# Install glfw3
############################################################################
- |
  if [[ -z "$(ls -A ${DEPS_DIR}/glfw3/glfw-3.2.1)" ]]; then
    mkdir -p ${DEPS_DIR}/glfw3
    travis_retry wget https://github.com/glfw/glfw/releases/download/3.2.1/glfw-3.2.1.zip -P ${DEPS_DIR}/glfw3
    cd ${DEPS_DIR}/glfw3
    unzip -q ${DEPS_DIR}/glfw3/glfw-3.2.1.zip
  fi
  cd ${DEPS_DIR}/glfw3/glfw-3.2.1
  cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=ON
  make
  sudo make install
#- |
#  if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
#    brew install glew
#    brew install assimp
#  fi
############################################################################
# Install opencv
############################################################################
- |
  if [[ -z "$(ls -A ${DEPS_DIR}/opencv/opencv-3.3.0)" ]]; then
    mkdir -p ${DEPS_DIR}/opencv
    travis_retry wget https://github.com/opencv/opencv/archive/3.3.0.zip -P ${DEPS_DIR}/opencv
    cd ${DEPS_DIR}/opencv
    unzip -q ${DEPS_DIR}/opencv/3.3.0.zip
  fi
  cd ${DEPS_DIR}/opencv/opencv-3.3.0
  mkdir build
  cd build
  cmake ..
  make -j$JOBS
  sudo make install
  sudo sed -i -e "s/-lAccelerate/ /" /usr/local/lib/pkgconfig/opencv.pc

############################################################################
# Install bullet
############################################################################
-  |
  if [[ -z "$(ls -A ${DEPS_DIR}/bullet3/bullet3-master)" ]]; then
    mkdir -p ${DEPS_DIR}/bullet
    travis_retry wget https://github.com/bulletphysics/bullet3/archive/master.zip -P ${DEPS_DIR}/bullet3
    cd ${DEPS_DIR}/bullet3
    unzip -q ${DEPS_DIR}/bullet3/master.zip
  fi
  cd ${DEPS_DIR}/bullet3/bullet3-master
  ./build_cmake_pybullet_double.sh
  cd build_cmake
  make -j$JOBS
  sudo make install

before_script:
- cd "${TRAVIS_BUILD_DIR}"

script:
- cmake -DENABLE_TESTS=ON .
- cmake --build . -- -j$JOBS
#- cd tests
#- ctest
